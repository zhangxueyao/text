// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: item.proto

package item

import (
	"context"

	"github.com/zhangxueyao/item/item-rpc/itemrpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeductStockReq  = itemrpc.DeductStockReq
	DeductStockResp = itemrpc.DeductStockResp
	GetStockReq     = itemrpc.GetStockReq
	GetStockResp    = itemrpc.GetStockResp
	GetUserReq      = itemrpc.GetUserReq
	GetUserResp     = itemrpc.GetUserResp
	RegisterReq     = itemrpc.RegisterReq
	RegisterResp    = itemrpc.RegisterResp
	User            = itemrpc.User

	Item interface {
		GetStock(ctx context.Context, in *GetStockReq, opts ...grpc.CallOption) (*GetStockResp, error)
		DeductStock(ctx context.Context, in *DeductStockReq, opts ...grpc.CallOption) (*DeductStockResp, error)
		Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
		GetUser(ctx context.Context, in *GetUserReq, opts ...grpc.CallOption) (*GetUserResp, error)
	}

	defaultItem struct {
		cli zrpc.Client
	}
)

func NewItem(cli zrpc.Client) Item {
	return &defaultItem{
		cli: cli,
	}
}

func (m *defaultItem) GetStock(ctx context.Context, in *GetStockReq, opts ...grpc.CallOption) (*GetStockResp, error) {
	client := itemrpc.NewItemClient(m.cli.Conn())
	return client.GetStock(ctx, in, opts...)
}

func (m *defaultItem) DeductStock(ctx context.Context, in *DeductStockReq, opts ...grpc.CallOption) (*DeductStockResp, error) {
	client := itemrpc.NewItemClient(m.cli.Conn())
	return client.DeductStock(ctx, in, opts...)
}

func (m *defaultItem) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	client := itemrpc.NewItemClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultItem) GetUser(ctx context.Context, in *GetUserReq, opts ...grpc.CallOption) (*GetUserResp, error) {
	client := itemrpc.NewItemClient(m.cli.Conn())
	return client.GetUser(ctx, in, opts...)
}
