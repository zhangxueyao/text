// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: item.proto

package server

import (
	"context"

	"github.com/zhangxueyao/item/item-rpc/internal/logic"
	"github.com/zhangxueyao/item/item-rpc/internal/svc"
	"github.com/zhangxueyao/item/item-rpc/itemrpc"
)

type ItemServer struct {
	svcCtx *svc.ServiceContext
	itemrpc.UnimplementedItemServer
}

func NewItemServer(svcCtx *svc.ServiceContext) *ItemServer {
	return &ItemServer{
		svcCtx: svcCtx,
	}
}

func (s *ItemServer) GetItem(ctx context.Context, in *itemrpc.GetItemReq) (*itemrpc.ItemResp, error) {
	l := logic.NewGetItemLogic(ctx, s.svcCtx)
	return l.GetItem(in)
}

func (s *ItemServer) UpdateItem(ctx context.Context, in *itemrpc.UpdateItemReq) (*itemrpc.UpdateItemResp, error) {
	l := logic.NewUpdateItemLogic(ctx, s.svcCtx)
	return l.UpdateItem(in)
}

func (s *ItemServer) Register(ctx context.Context, in *itemrpc.RegisterReq) (*itemrpc.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *ItemServer) GetUser(ctx context.Context, in *itemrpc.GetUserReq) (*itemrpc.GetUserResp, error) {
	l := logic.NewGetUserLogic(ctx, s.svcCtx)
	return l.GetUser(in)
}
