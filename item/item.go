// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: item.proto

package item

import (
	"context"

	"github.com/zhangxueyao/item-rpc/itemrpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetItemReq     = itemrpc.GetItemReq
	ItemResp       = itemrpc.ItemResp
	UpdateItemReq  = itemrpc.UpdateItemReq
	UpdateItemResp = itemrpc.UpdateItemResp

	Item interface {
		GetItem(ctx context.Context, in *GetItemReq, opts ...grpc.CallOption) (*ItemResp, error)
		UpdateItem(ctx context.Context, in *UpdateItemReq, opts ...grpc.CallOption) (*UpdateItemResp, error)
	}

	defaultItem struct {
		cli zrpc.Client
	}
)

func NewItem(cli zrpc.Client) Item {
	return &defaultItem{
		cli: cli,
	}
}

func (m *defaultItem) GetItem(ctx context.Context, in *GetItemReq, opts ...grpc.CallOption) (*ItemResp, error) {
	client := itemrpc.NewItemClient(m.cli.Conn())
	return client.GetItem(ctx, in, opts...)
}

func (m *defaultItem) UpdateItem(ctx context.Context, in *UpdateItemReq, opts ...grpc.CallOption) (*UpdateItemResp, error) {
	client := itemrpc.NewItemClient(m.cli.Conn())
	return client.UpdateItem(ctx, in, opts...)
}
